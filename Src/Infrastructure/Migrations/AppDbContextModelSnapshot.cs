// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RhSensoERP.Infrastructure.Persistence;

#nullable disable

namespace RhSensoERP.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RhSensoERP.Core.Security.Entities.BotaoFuncao", b =>
                {
                    b.Property<string>("CdSistema")
                        .HasColumnType("char(10)")
                        .HasColumnName("cdsistema");

                    b.Property<string>("CdFuncao")
                        .HasColumnType("varchar(30)")
                        .HasColumnName("cdfuncao");

                    b.Property<string>("NmBotao")
                        .HasColumnType("varchar(30)")
                        .HasColumnName("nmbotao");

                    b.Property<string>("CdAcao")
                        .IsRequired()
                        .HasColumnType("char(1)")
                        .HasColumnName("cdacao");

                    b.Property<string>("DcBotao")
                        .IsRequired()
                        .HasColumnType("varchar(60)")
                        .HasColumnName("dcbotao");

                    b.HasKey("CdSistema", "CdFuncao", "NmBotao");

                    b.ToTable("btfuncao", "dbo");
                });

            modelBuilder.Entity("RhSensoERP.Core.Security.Entities.Funcao", b =>
                {
                    b.Property<string>("CdSistema")
                        .HasColumnType("char(10)")
                        .HasColumnName("cdsistema");

                    b.Property<string>("CdFuncao")
                        .HasColumnType("varchar(30)")
                        .HasColumnName("cdfuncao");

                    b.Property<string>("DcFuncao")
                        .HasColumnType("varchar(80)")
                        .HasColumnName("dcfuncao");

                    b.Property<string>("DcModulo")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("dcmodulo");

                    b.Property<string>("DescricaoModulo")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("descricaomodulo");

                    b.HasKey("CdSistema", "CdFuncao");

                    b.ToTable("fucn1", "dbo");
                });

            modelBuilder.Entity("RhSensoERP.Core.Security.Entities.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Groups", (string)null);
                });

            modelBuilder.Entity("RhSensoERP.Core.Security.Entities.GroupRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("RoleId");

                    b.ToTable("GroupRoles", (string)null);
                });

            modelBuilder.Entity("RhSensoERP.Core.Security.Entities.GrupoDeUsuario", b =>
                {
                    b.Property<string>("CdSistema")
                        .HasColumnType("char(10)")
                        .HasColumnName("cdsistema");

                    b.Property<string>("CdGrUser")
                        .HasColumnType("varchar(30)")
                        .HasColumnName("cdgruser");

                    b.Property<string>("DcGrUser")
                        .HasColumnType("varchar(60)")
                        .HasColumnName("dcgruser");

                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("newsequentialid()");

                    b.HasKey("CdSistema", "CdGrUser");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("UK_gurh1_id");

                    b.ToTable("gurh1", "dbo");
                });

            modelBuilder.Entity("RhSensoERP.Core.Security.Entities.GrupoFuncao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<string>("CdAcoes")
                        .IsRequired()
                        .HasColumnType("char(20)")
                        .HasColumnName("cdacoes");

                    b.Property<string>("CdFuncao")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasColumnName("cdfuncao");

                    b.Property<string>("CdGrUser")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasColumnName("cdgruser");

                    b.Property<string>("CdRestric")
                        .IsRequired()
                        .HasColumnType("char(1)")
                        .HasColumnName("cdrestric");

                    b.Property<string>("CdSistema")
                        .HasColumnType("char(10)")
                        .HasColumnName("cdsistema");

                    b.Property<Guid?>("IdGrupoDeUsuario")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idgrupodeusuario");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("UK_hbrh1_id");

                    b.HasIndex("IdGrupoDeUsuario");

                    b.HasIndex("CdSistema", "CdFuncao");

                    b.ToTable("hbrh1", "dbo");
                });

            modelBuilder.Entity("RhSensoERP.Core.Security.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles", (string)null);
                });

            modelBuilder.Entity("RhSensoERP.Core.Security.Entities.SaasInvitation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AcceptedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("AcceptedAt");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Email");

                    b.Property<string>("EmailNormalized")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("EmailNormalized")
                        .HasComputedColumnSql("UPPER([Email])", true);

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("ExpiresAt");

                    b.Property<string>("InvitationToken")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("InvitationToken");

                    b.Property<Guid>("InvitedById")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InvitedById");

                    b.Property<bool>("IsAccepted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsAccepted");

                    b.Property<string>("Message")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Message");

                    b.Property<string>("Role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("User")
                        .HasColumnName("Role");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedAt")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("Id");

                    b.HasIndex("ExpiresAt")
                        .HasDatabaseName("IX_SaasInvitations_ExpiresAt");

                    b.HasIndex("InvitationToken")
                        .IsUnique()
                        .HasDatabaseName("IX_SaasInvitations_InvitationToken");

                    b.HasIndex("InvitedById");

                    b.HasIndex("TenantId");

                    b.HasIndex("EmailNormalized", "TenantId")
                        .IsUnique()
                        .HasDatabaseName("UK_SaasInvitations_EmailNormalized_TenantId")
                        .HasFilter("[IsAccepted] = 0");

                    b.ToTable("SaasInvitations", "dbo");
                });

            modelBuilder.Entity("RhSensoERP.Core.Security.Entities.SaasTenant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("CompanyName");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CreatedBy");

                    b.Property<string>("Domain")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Domain");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("IsActive");

                    b.Property<int>("MaxUsers")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(10)
                        .HasColumnName("MaxUsers");

                    b.Property<string>("PlanType")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Basic")
                        .HasColumnName("PlanType");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedAt")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("UpdatedBy");

                    b.HasKey("Id");

                    b.HasIndex("Domain")
                        .IsUnique()
                        .HasDatabaseName("UK_SaasTenants_Domain")
                        .HasFilter("[Domain] IS NOT NULL");

                    b.HasIndex("IsActive")
                        .HasDatabaseName("IX_SaasTenants_IsActive");

                    b.ToTable("SaasTenants", "dbo");
                });

            modelBuilder.Entity("RhSensoERP.Core.Security.Entities.SaasUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedAt")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CreatedBy");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Email");

                    b.Property<string>("EmailConfirmationToken")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("EmailConfirmationToken");

                    b.Property<bool>("EmailConfirmed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("EmailConfirmed");

                    b.Property<string>("EmailNormalized")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("EmailNormalized")
                        .HasComputedColumnSql("UPPER([Email])", true);

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("FullName");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("IpAddress");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("IsActive");

                    b.Property<DateTime?>("LastLoginAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("LastLoginAt");

                    b.Property<DateTime?>("LockedUntil")
                        .HasColumnType("datetime2")
                        .HasColumnName("LockedUntil");

                    b.Property<int>("LoginAttempts")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("LoginAttempts");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("PasswordHash");

                    b.Property<string>("PasswordResetToken")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("PasswordResetToken");

                    b.Property<DateTime?>("PasswordResetTokenExpiry")
                        .HasColumnType("datetime2")
                        .HasColumnName("PasswordResetTokenExpiry");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("PasswordSalt");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpiresAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TenantId");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("UpdatedAt")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("UpdatedBy");

                    b.Property<string>("UserAgent")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("UserAgent");

                    b.HasKey("Id");

                    b.HasIndex("EmailConfirmationToken")
                        .HasDatabaseName("IX_SaasUsers_EmailConfirmationToken")
                        .HasFilter("[EmailConfirmationToken] IS NOT NULL");

                    b.HasIndex("EmailNormalized")
                        .IsUnique()
                        .HasDatabaseName("UK_SaasUsers_EmailNormalized");

                    b.HasIndex("PasswordResetToken")
                        .HasDatabaseName("IX_SaasUsers_PasswordResetToken")
                        .HasFilter("[PasswordResetToken] IS NOT NULL");

                    b.HasIndex("TenantId")
                        .HasDatabaseName("IX_SaasUsers_TenantId");

                    b.HasIndex("IsActive", "EmailConfirmed")
                        .HasDatabaseName("IX_SaasUsers_IsActive_EmailConfirmed");

                    b.ToTable("SaasUsers", "dbo");
                });

            modelBuilder.Entity("RhSensoERP.Core.Security.Entities.Sistema", b =>
                {
                    b.Property<string>("CdSistema")
                        .HasColumnType("char(10)")
                        .HasColumnName("cdsistema");

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("ativo");

                    b.Property<string>("DcSistema")
                        .IsRequired()
                        .HasColumnType("varchar(60)")
                        .HasColumnName("dcsistema");

                    b.HasKey("CdSistema");

                    b.ToTable("tsistema", "dbo");
                });

            modelBuilder.Entity("RhSensoERP.Core.Security.Entities.User", b =>
                {
                    b.Property<string>("CdUsuario")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("cdusuario");

                    b.Property<int?>("CdEmpresa")
                        .HasColumnType("int")
                        .HasColumnName("cdempresa");

                    b.Property<int?>("CdFilial")
                        .HasColumnType("int")
                        .HasColumnName("cdfilial");

                    b.Property<string>("DcUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("dcusuario");

                    b.Property<string>("EmailUsuario")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email_usuario");

                    b.Property<string>("FlAtivo")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("flativo");

                    b.Property<string>("FlNaoRecebeEmail")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("flnaorecebeemail");

                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<Guid?>("IdFuncionario")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idfuncionario");

                    b.Property<string>("NmImpCche")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nmimpcche");

                    b.Property<string>("NoMatric")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasColumnName("nomatric");

                    b.Property<int>("NoUser")
                        .HasColumnType("int")
                        .HasColumnName("nouser");

                    b.Property<string>("NormalizedUsername")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("normalizedusername");

                    b.Property<string>("SenhaUser")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("senhauser");

                    b.Property<string>("TpUsuario")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("tpusuario");

                    b.HasKey("CdUsuario");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("tuse1", "dbo");
                });

            modelBuilder.Entity("RhSensoERP.Core.Security.Entities.UserGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<string>("CdGrUser")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasColumnName("cdgruser");

                    b.Property<string>("CdSistema")
                        .HasColumnType("char(10)")
                        .HasColumnName("cdsistema");

                    b.Property<string>("CdUsuario")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasColumnName("cdusuario");

                    b.Property<DateTime?>("DtFimVal")
                        .HasColumnType("datetime")
                        .HasColumnName("dtfimval");

                    b.Property<DateTime>("DtIniVal")
                        .HasColumnType("datetime")
                        .HasColumnName("dtinival");

                    b.Property<Guid?>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdGrupoDeUsuario")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idgrupodeusuario");

                    b.Property<Guid?>("IdUsuario")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idusuario");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("UK_usrh1_id");

                    b.HasIndex("IdGrupoDeUsuario");

                    b.HasIndex("IdUsuario");

                    b.HasIndex("CdUsuario", "CdSistema", "CdGrUser", "DtIniVal")
                        .IsUnique()
                        .HasDatabaseName("UK_usrh1_cdusuario_cdsistema_cdgruser_dtinival")
                        .HasFilter("[cdsistema] IS NOT NULL");

                    b.ToTable("usrh1", "dbo");
                });

            modelBuilder.Entity("RhSensoERP.Core.Security.Entities.BotaoFuncao", b =>
                {
                    b.HasOne("RhSensoERP.Core.Security.Entities.Funcao", "Funcao")
                        .WithMany("Botoes")
                        .HasForeignKey("CdSistema", "CdFuncao")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_btfuncao_fucn1_cdsistema_cdfuncao");

                    b.Navigation("Funcao");
                });

            modelBuilder.Entity("RhSensoERP.Core.Security.Entities.Funcao", b =>
                {
                    b.HasOne("RhSensoERP.Core.Security.Entities.Sistema", "Sistema")
                        .WithMany("Funcoes")
                        .HasForeignKey("CdSistema")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_fucn1_cdsistema");

                    b.Navigation("Sistema");
                });

            modelBuilder.Entity("RhSensoERP.Core.Security.Entities.GroupRole", b =>
                {
                    b.HasOne("RhSensoERP.Core.Security.Entities.Group", "Group")
                        .WithMany("GroupRoles")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RhSensoERP.Core.Security.Entities.Role", "Role")
                        .WithMany("GroupRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("RhSensoERP.Core.Security.Entities.GrupoDeUsuario", b =>
                {
                    b.HasOne("RhSensoERP.Core.Security.Entities.Sistema", "Sistema")
                        .WithMany()
                        .HasForeignKey("CdSistema")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_gurh1_tsistema_cdsistema");

                    b.Navigation("Sistema");
                });

            modelBuilder.Entity("RhSensoERP.Core.Security.Entities.GrupoFuncao", b =>
                {
                    b.HasOne("RhSensoERP.Core.Security.Entities.GrupoDeUsuario", "GrupoDeUsuario")
                        .WithMany("GrupoFuncoes")
                        .HasForeignKey("IdGrupoDeUsuario")
                        .HasPrincipalKey("Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_hbrh1_gurh1_idgrupodeusuario");

                    b.HasOne("RhSensoERP.Core.Security.Entities.Funcao", "Funcao")
                        .WithMany("GrupoFuncoes")
                        .HasForeignKey("CdSistema", "CdFuncao")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_hbrh1_fucn1_cdsistema_cdfuncao");

                    b.Navigation("Funcao");

                    b.Navigation("GrupoDeUsuario");
                });

            modelBuilder.Entity("RhSensoERP.Core.Security.Entities.SaasInvitation", b =>
                {
                    b.HasOne("RhSensoERP.Core.Security.Entities.SaasUser", "InvitedBy")
                        .WithMany("SentInvitations")
                        .HasForeignKey("InvitedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_SaasInvitations_SaasUsers_InvitedById");

                    b.HasOne("RhSensoERP.Core.Security.Entities.SaasTenant", "Tenant")
                        .WithMany("Invitations")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_SaasInvitations_SaasTenants_TenantId");

                    b.Navigation("InvitedBy");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("RhSensoERP.Core.Security.Entities.SaasUser", b =>
                {
                    b.HasOne("RhSensoERP.Core.Security.Entities.SaasTenant", "Tenant")
                        .WithMany("Users")
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_SaasUsers_SaasTenants_TenantId");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("RhSensoERP.Core.Security.Entities.UserGroup", b =>
                {
                    b.HasOne("RhSensoERP.Core.Security.Entities.Group", null)
                        .WithMany("UserGroups")
                        .HasForeignKey("GroupId");

                    b.HasOne("RhSensoERP.Core.Security.Entities.GrupoDeUsuario", null)
                        .WithMany("UserGroups")
                        .HasForeignKey("IdGrupoDeUsuario")
                        .HasPrincipalKey("Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("RhSensoERP.Core.Security.Entities.User", "User")
                        .WithMany("UserGroups")
                        .HasForeignKey("IdUsuario")
                        .HasPrincipalKey("Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_usrh1_tuse1_idusuario");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RhSensoERP.Core.Security.Entities.Funcao", b =>
                {
                    b.Navigation("Botoes");

                    b.Navigation("GrupoFuncoes");
                });

            modelBuilder.Entity("RhSensoERP.Core.Security.Entities.Group", b =>
                {
                    b.Navigation("GroupRoles");

                    b.Navigation("UserGroups");
                });

            modelBuilder.Entity("RhSensoERP.Core.Security.Entities.GrupoDeUsuario", b =>
                {
                    b.Navigation("GrupoFuncoes");

                    b.Navigation("UserGroups");
                });

            modelBuilder.Entity("RhSensoERP.Core.Security.Entities.Role", b =>
                {
                    b.Navigation("GroupRoles");
                });

            modelBuilder.Entity("RhSensoERP.Core.Security.Entities.SaasTenant", b =>
                {
                    b.Navigation("Invitations");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("RhSensoERP.Core.Security.Entities.SaasUser", b =>
                {
                    b.Navigation("SentInvitations");
                });

            modelBuilder.Entity("RhSensoERP.Core.Security.Entities.Sistema", b =>
                {
                    b.Navigation("Funcoes");
                });

            modelBuilder.Entity("RhSensoERP.Core.Security.Entities.User", b =>
                {
                    b.Navigation("UserGroups");
                });
#pragma warning restore 612, 618
        }
    }
}
